#! /usr/bin/env coffee

devices  = require '../ThermoStat'
fs = require 'fs'
path = require 'path'

argv = process.argv.slice(2)
n    = parseInt(argv[0])
mode = argv[1]

console.log("Parsing Weather Information...")

GEOCODER = JSON.parse(fs.readFileSync(__dirname + '/../lat_longs.json'))
cities   = fs.readdirSync("#{__dirname}/../cities")

read = (slug) ->
  JSON.parse fs.readFileSync("#{__dirname}/../cities/#{slug}")

city_readings = cities.map (city_file) ->
  slug = path.basename(city_file, '.json')
  [country, city] = slug.split('-')
  [lat, long]     = GEOCODER[city] || [42,42]

  location:
    country: country
    city: city
    lat: lat
    long: long
  readings: (parseInt(forecast.temp.metric) for forecast in read(city_file).hourly_forecast)

console.log("Weather Information Parsed")

if mode == 'uuid'
  uuid = require 'node-uuid'
  next = (i) -> "#{process.env.PS}.#{uuid.v4()}"
else
  next = (i) -> i

next_city = (i) ->
  city_readings[i%city_readings.length]

#to hold timers
sensors = []

kick = (i) ->
  func = () ->
    id = next(i)
    report = next_city(i)
    s = new devices.CityThermoStat(id, report)
    sensors[id] = s
    s.start()
  setTimeout(func, Math.random()*1000)

kick(num) for num in [1..n]
